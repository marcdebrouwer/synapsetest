{
	"name": "RefrigerantFlow",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"linkedService": {
						"referenceName": "global-data-modeling-space-WorkspaceDefaultStorage",
						"type": "LinkedServiceReference"
					},
					"name": "VirtualScoreData"
				},
				{
					"name": "BannerData"
				}
			],
			"sinks": [
				{
					"name": "MapVirtualScores"
				}
			],
			"transformations": [
				{
					"name": "CreateVirtualScoreKey"
				},
				{
					"name": "lookupBrand"
				}
			],
			"scriptLines": [
				"source(output(",
				"          Brand as string,",
				"          EnergyType as string,",
				"          {virtual Market based} as double '000,000,000.000',",
				"          {virtual Location based} as double '000,000,000.000',",
				"          Start_date as date 'dd-MM-yyyy',",
				"          End_date as date 'dd-MM-yyyy'",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'delimited',",
				"     fileSystem: 'fsgdmsdevweeu01',",
				"     folderPath: 'ESG_MAPDATA',",
				"     fileName: 'virtualscores.csv',",
				"     columnDelimiter: ';',",
				"     escapeChar: '\\\\',",
				"     quoteChar: '\\\"',",
				"     columnNamesAsHeader: true) ~> VirtualScoreData",
				"source(output(",
				"          BannerId as integer,",
				"          BannerName as string,",
				"          OrganizationId as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     store: 'synapse',",
				"     databaseType: 'spark',",
				"     format: 'table',",
				"     database: 'ESGNORMALIZEDMODEL',",
				"     tableName: 'Banner') ~> BannerData",
				"VirtualScoreData keyGenerate(output(VirtualScoreId as long),",
				"     startAt: 1L,",
				"     stepValue: 1L) ~> CreateVirtualScoreKey",
				"CreateVirtualScoreKey, BannerData lookup(Brand == BannerName,",
				"     multiple: false,",
				"     pickup: 'first',",
				"     asc(BannerId, true),",
				"     broadcast: 'auto')~> lookupBrand",
				"lookupBrand sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     store: 'synapse',",
				"     databaseType: 'spark',",
				"     format: 'table',",
				"     database: 'ESGNORMALIZEDMODEL',",
				"     tableName: 'VirtualEmissionFactor',",
				"     input(",
				"          VirtualEmissionId as string,",
				"          VirtualEmissionEnergyTypeId as integer,",
				"          VirtualEmissionStartDate as date,",
				"          VirtualEmissionEndDate as date",
				"     ),",
				"     mapColumn(",
				"          VirtualEmissionId = VirtualScoreId,",
				"          VirtualEmissionEnergyTypeId = EnergyType,",
				"          VirtualEmissionStartDate = Start_date,",
				"          VirtualEmissionEndDate = End_date",
				"     )) ~> MapVirtualScores"
			]
		}
	}
}