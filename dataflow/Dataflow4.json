{
	"name": "Dataflow4",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"name": "FacilityData"
				},
				{
					"name": "LocationData"
				},
				{
					"name": "FacilityTypeData"
				},
				{
					"name": "BannerData"
				},
				{
					"name": "CountryData"
				},
				{
					"name": "EgridRegionData"
				},
				{
					"name": "OrgData"
				}
			],
			"sinks": [
				{
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "joinLocation"
				},
				{
					"name": "joinFacilityType"
				},
				{
					"name": "joinCountry"
				},
				{
					"name": "joinBanner"
				},
				{
					"name": "joinEgrid"
				},
				{
					"name": "joinOrganization"
				}
			],
			"scriptLines": [
				"source(output(",
				"          FacilityId as integer,",
				"          FacilityName as string,",
				"          GrossFloorArea as integer,",
				"          AvailableSellingArea as integer,",
				"          FacilityTypeId as integer,",
				"          BannerId as integer,",
				"          FacilitySub as string,",
				"          LocationId as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     store: 'synapse',",
				"     databaseType: 'spark',",
				"     format: 'table',",
				"     database: 'ESGNORMALIZEDMODEL',",
				"     tableName: 'Facility') ~> FacilityData",
				"source(output(",
				"          LocationId as integer,",
				"          LocationName as string,",
				"          LocationAddressLine1 as string,",
				"          LocationCity as string,",
				"          LocationState as string,",
				"          LocationZipCode as string,",
				"          CountryId as integer,",
				"          EgridRegionId as integer,",
				"          LocationNo as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     store: 'synapse',",
				"     databaseType: 'spark',",
				"     format: 'table',",
				"     database: 'ESGNORMALIZEDMODEL',",
				"     tableName: 'Location') ~> LocationData",
				"source(output(",
				"          FacilityTypeId as integer,",
				"          FaciityTypeName as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     store: 'synapse',",
				"     databaseType: 'spark',",
				"     format: 'table',",
				"     database: 'ESGNORMALIZEDMODEL',",
				"     tableName: 'FacilityType') ~> FacilityTypeData",
				"source(output(",
				"          BannerId as integer,",
				"          BannerName as string,",
				"          OrganizationId as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     store: 'synapse',",
				"     databaseType: 'spark',",
				"     format: 'table',",
				"     database: 'ESGNORMALIZEDMODEL',",
				"     tableName: 'Banner') ~> BannerData",
				"source(output(",
				"          CountryId as integer,",
				"          IsoCountryName as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     store: 'synapse',",
				"     databaseType: 'spark',",
				"     format: 'table',",
				"     database: 'ESGNORMALIZEDMODEL',",
				"     tableName: 'Country') ~> CountryData",
				"source(output(",
				"          EgridRegionId as integer,",
				"          EgridRegionName as string,",
				"          EGridRegionLongName as string,",
				"          EgridZipcode as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     store: 'synapse',",
				"     databaseType: 'spark',",
				"     format: 'table',",
				"     database: 'ESGNORMALIZEDMODEL',",
				"     tableName: 'EgridRegions') ~> EgridRegionData",
				"source(output(",
				"          OrganizationId as integer,",
				"          OrganizationName as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     store: 'synapse',",
				"     databaseType: 'spark',",
				"     format: 'table',",
				"     database: 'ESGNORMALIZEDMODEL',",
				"     tableName: 'PartyOrganization') ~> OrgData",
				"FacilityData, LocationData join(FacilityData@LocationId == LocationData@LocationId,",
				"     joinType:'left',",
				"     broadcast: 'auto')~> joinLocation",
				"joinLocation, FacilityTypeData join(FacilityData@FacilityTypeId == FacilityTypeData@FacilityTypeId,",
				"     joinType:'left',",
				"     broadcast: 'auto')~> joinFacilityType",
				"joinFacilityType, CountryData join(LocationData@CountryId == CountryData@CountryId,",
				"     joinType:'left',",
				"     broadcast: 'auto')~> joinCountry",
				"joinCountry, BannerData join(FacilityData@BannerId == BannerData@BannerId,",
				"     joinType:'left',",
				"     broadcast: 'auto')~> joinBanner",
				"joinBanner, EgridRegionData join(LocationData@EgridRegionId == EgridRegionData@EgridRegionId,",
				"     joinType:'left',",
				"     broadcast: 'auto')~> joinEgrid",
				"joinEgrid, OrgData join(BannerData@OrganizationId == OrgData@OrganizationId,",
				"     joinType:'left',",
				"     broadcast: 'auto')~> joinOrganization",
				"joinOrganization sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     store: 'synapse',",
				"     databaseType: 'spark',",
				"     format: 'table',",
				"     database: 'ADESGPOC',",
				"     tableName: 'DimFacility',",
				"     input(",
				"          FacilityId as integer,",
				"          FacilityName as string,",
				"          GrossFloorArea as double,",
				"          AvailableSellingArea as double,",
				"          FacilityType as string,",
				"          FacilityOpco as string,",
				"          FacilityAdressLine as string,",
				"          FacilityCountry as string,",
				"          FacilityState as string,",
				"          FacilityZipcode as string,",
				"          FacilityEgridRegion as string,",
				"          FacilityOrganization as string",
				"     ),",
				"     mapColumn(",
				"          FacilityId,",
				"          FacilityName,",
				"          GrossFloorArea,",
				"          AvailableSellingArea,",
				"          FacilityType = FaciityTypeName,",
				"          FacilityOpco = BannerName,",
				"          FacilityAdressLine = LocationAddressLine1,",
				"          FacilityZipcode = LocationZipCode,",
				"          FacilityState = LocationState,",
				"          FacilityEgridRegion = EGridRegionLongName,",
				"          FacilityOrganization = OrganizationName",
				"     )) ~> sink1"
			]
		}
	}
}