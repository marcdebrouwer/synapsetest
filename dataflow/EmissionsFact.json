{
	"name": "EmissionsFact",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"name": "RefrigerantData"
				},
				{
					"name": "PurchasedData"
				}
			],
			"sinks": [
				{
					"name": "MapData"
				}
			],
			"transformations": [
				{
					"name": "joinEnergy"
				},
				{
					"name": "Type"
				}
			],
			"scriptLines": [
				"source(output(",
				"          RefrigerantId as integer,",
				"          PeriodStart as date,",
				"          PeriodEnd as date,",
				"          FuelMassVolumeUnitsLb as double,",
				"          C02EmissionsUnits as double,",
				"          PurchasedEnergyId as integer,",
				"          EmissionFactorId as integer,",
				"          FacilityId as integer,",
				"          FuelMassKg as double,",
				"          VirtualEmissionFactorId as integer,",
				"          RefrigerantNumber as integer,",
				"          LeakageStatus as string,",
				"          LeakageVendor as string,",
				"          RefrigerantCategory as string,",
				"          EnergyText as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     store: 'synapse',",
				"     databaseType: 'spark',",
				"     format: 'table',",
				"     database: 'ESGNORMALIZEDMODEL',",
				"     tableName: 'DirectEmissionsFromRefrigeration') ~> RefrigerantData",
				"source(output(",
				"          PurchasedGasId as integer,",
				"          PurchasedGasName as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     store: 'synapse',",
				"     databaseType: 'spark',",
				"     format: 'table',",
				"     database: 'ESGNORMALIZEDMODEL',",
				"     tableName: 'PurchasedGas') ~> PurchasedData",
				"RefrigerantData, PurchasedData join(PurchasedEnergyId == PurchasedGasId,",
				"     joinType:'left',",
				"     broadcast: 'auto')~> joinEnergy",
				"joinEnergy derive(Type = \"Refrigerants\") ~> Type",
				"Type sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     store: 'synapse',",
				"     databaseType: 'spark',",
				"     format: 'table',",
				"     database: 'ADESGPOC',",
				"     tableName: 'FactEmissions',",
				"     input(",
				"          EmissionId as integer,",
				"          PeriodStartTimestamp as date,",
				"          PeriodEndTimestamp as date,",
				"          TotalCo2EEmissionsUnits as integer,",
				"          TotalCo2EEmissionsUomId as integer,",
				"          FacilityId as integer,",
				"          EmissionFactorId as integer,",
				"          VirtualEmissionFactorId as integer,",
				"          EmissionSource as string,",
				"          EmissionEnergyType as string",
				"     ),",
				"     mapColumn(",
				"          EmissionId = RefrigerantId,",
				"          PeriodStartTimestamp = PeriodStart,",
				"          TotalCo2EEmissionsUnits = FuelMassKg,",
				"          FacilityId,",
				"          EmissionFactorId,",
				"          VirtualEmissionFactorId,",
				"          EmissionSource = Type,",
				"          EmissionEnergyType = PurchasedGasName",
				"     )) ~> MapData"
			]
		}
	}
}