{
	"name": "DataFlowDenormalized",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"name": "VirtualEmissionData"
				},
				{
					"name": "PurchasedData"
				},
				{
					"name": "BannerData"
				}
			],
			"sinks": [
				{
					"name": "sinkVirtual"
				}
			],
			"transformations": [
				{
					"name": "lookupPurchasedData"
				},
				{
					"name": "lookupBanner"
				}
			],
			"scriptLines": [
				"source(output(",
				"          VirtualEmissionId as integer,",
				"          PurchasedGasId as integer,",
				"          Date as date,",
				"          VirtualEmissionScope as string,",
				"          BannerId as integer,",
				"          VirtualEmissionFactorLocation as double,",
				"          VirtualEmissionFactorMarket as double",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     store: 'synapse',",
				"     databaseType: 'spark',",
				"     format: 'table',",
				"     database: 'ESGNORMALIZEDMODEL',",
				"     tableName: 'VirtualEmissionFactor') ~> VirtualEmissionData",
				"source(output(",
				"          PurchasedGasId as integer,",
				"          PurchasedGasName as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     store: 'synapse',",
				"     databaseType: 'spark',",
				"     format: 'table',",
				"     database: 'ESGNORMALIZEDMODEL',",
				"     tableName: 'PurchasedGas') ~> PurchasedData",
				"source(output(",
				"          BannerId as integer,",
				"          BannerName as string,",
				"          OrganizationId as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     store: 'synapse',",
				"     databaseType: 'spark',",
				"     format: 'table',",
				"     database: 'ESGNORMALIZEDMODEL',",
				"     tableName: 'Banner') ~> BannerData",
				"VirtualEmissionData, PurchasedData lookup(VirtualEmissionData@PurchasedGasId == PurchasedData@PurchasedGasId,",
				"     multiple: false,",
				"     pickup: 'any',",
				"     broadcast: 'auto')~> lookupPurchasedData",
				"lookupPurchasedData, BannerData lookup(VirtualEmissionData@BannerId == BannerData@BannerId,",
				"     multiple: false,",
				"     pickup: 'any',",
				"     broadcast: 'auto')~> lookupBanner",
				"lookupBanner sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     store: 'synapse',",
				"     databaseType: 'spark',",
				"     format: 'table',",
				"     database: 'ADESGPOC',",
				"     tableName: 'DimVirtualEmissionFactor',",
				"     recreate:true,",
				"     input(",
				"          VirtualEmissionFactorId as integer,",
				"          VirtualEmissionFactorName as string,",
				"          VirtualEmissionFactorMarketBased as double,",
				"          VirtualEmissionFactorLocationBased as double,",
				"          VirtualEmissionDate as date,",
				"          VirtualEmissionBanner as string,",
				"          VirtualEmissionScope as string",
				"     ),",
				"     mapColumn(",
				"          VirtualEmissionFactorId = VirtualEmissionId,",
				"          VirtualEmissionDate = Date,",
				"          VirtualEmissionScope,",
				"          VirtualEmissionFactorLocationBased = VirtualEmissionFactorLocation,",
				"          VirtualEmissionFactorMarketBased = VirtualEmissionFactorMarket,",
				"          VirtualEmissionFactorName = PurchasedGasName,",
				"          VirtualEmissionBanner = BannerName",
				"     )) ~> sinkVirtual"
			]
		}
	}
}