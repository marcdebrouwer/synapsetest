{
	"name": "Dataflow2",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"linkedService": {
						"referenceName": "global-data-modeling-space-WorkspaceDefaultStorage",
						"type": "LinkedServiceReference"
					},
					"name": "CountryData"
				},
				{
					"linkedService": {
						"referenceName": "global-data-modeling-space-WorkspaceDefaultStorage",
						"type": "LinkedServiceReference"
					},
					"name": "OrganizationData"
				},
				{
					"linkedService": {
						"referenceName": "global-data-modeling-space-WorkspaceDefaultStorage",
						"type": "LinkedServiceReference"
					},
					"name": "BannerData"
				},
				{
					"name": "Organization3nf"
				}
			],
			"sinks": [
				{
					"name": "CountryMapping"
				},
				{
					"name": "OrganizationMapping"
				},
				{
					"name": "BannerMapping"
				}
			],
			"transformations": [
				{
					"name": "DistinctRows"
				},
				{
					"name": "CountrIdKey"
				},
				{
					"name": "DistinctCompany"
				},
				{
					"name": "OrganizationIdKey"
				},
				{
					"name": "DistinctOpco"
				},
				{
					"name": "BannerIdKey"
				},
				{
					"name": "LookupOrganizationId"
				}
			],
			"scriptLines": [
				"source(output(",
				"          Company as string,",
				"          Region as string,",
				"          OpCo as string,",
				"          Brand as string,",
				"          {Facility Type} as string,",
				"          {Facility ID} as integer,",
				"          {Facility Name} as string,",
				"          Address as string,",
				"          City as string,",
				"          {State } as string,",
				"          Country as string,",
				"          {Postal Code} as string,",
				"          {Gross area owned stores ft2} as integer '000',",
				"          {Sales area owned stores ft2} as integer '000'",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'delimited',",
				"     fileSystem: 'fsgdmsdevweeu01',",
				"     folderPath: 'ESG_MAPDATA',",
				"     fileName: 'Facility.csv',",
				"     columnDelimiter: ';',",
				"     escapeChar: '\\\\',",
				"     quoteChar: '\\\"',",
				"     columnNamesAsHeader: true) ~> CountryData",
				"source(output(",
				"          Company as string,",
				"          Region as string,",
				"          OpCo as string,",
				"          Brand as string,",
				"          {Facility Type} as string,",
				"          {Facility ID} as integer,",
				"          {Facility Name} as string,",
				"          Address as string,",
				"          City as string,",
				"          {State } as string,",
				"          Country as string,",
				"          {Postal Code} as string,",
				"          {Gross area owned stores ft2} as integer,",
				"          {Sales area owned stores ft2} as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'delimited',",
				"     fileSystem: 'fsgdmsdevweeu01',",
				"     folderPath: 'ESG_MAPDATA',",
				"     fileName: 'Facility.csv',",
				"     columnDelimiter: ';',",
				"     escapeChar: '\\\\',",
				"     quoteChar: '\\\"',",
				"     columnNamesAsHeader: true) ~> OrganizationData",
				"source(output(",
				"          Company as string,",
				"          Region as string,",
				"          OpCo as string,",
				"          Brand as string,",
				"          {Facility Type} as string,",
				"          {Facility ID} as integer,",
				"          {Facility Name} as string,",
				"          Address as string,",
				"          City as string,",
				"          {State } as string,",
				"          Country as string,",
				"          {Postal Code} as string,",
				"          {Gross area owned stores ft2} as integer,",
				"          {Sales area owned stores ft2} as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'delimited',",
				"     fileSystem: 'fsgdmsdevweeu01',",
				"     folderPath: 'ESG_MAPDATA',",
				"     fileName: 'Facility.csv',",
				"     columnDelimiter: ';',",
				"     escapeChar: '\\\\',",
				"     quoteChar: '\\\"',",
				"     columnNamesAsHeader: true) ~> BannerData",
				"source(output(",
				"          OrganizationId as integer,",
				"          OrganizationName as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     store: 'synapse',",
				"     databaseType: 'spark',",
				"     format: 'table',",
				"     database: 'ADESG3NF',",
				"     tableName: 'Organization') ~> Organization3nf",
				"CountryData aggregate(groupBy(Country),",
				"     each(match(name != \"Country\"), $$ = first($$))) ~> DistinctRows",
				"DistinctRows keyGenerate(output(CountryId as long),",
				"     startAt: 1L,",
				"     stepValue: 1L) ~> CountrIdKey",
				"OrganizationData aggregate(groupBy(Company),",
				"     each(match(name != \"Company\"), $$ = first($$))) ~> DistinctCompany",
				"DistinctCompany keyGenerate(output(OrganizationId as long),",
				"     startAt: 1L,",
				"     stepValue: 1L) ~> OrganizationIdKey",
				"BannerData aggregate(groupBy(OpCo),",
				"     each(match(name != \"OpCo\"), $$ = first($$))) ~> DistinctOpco",
				"DistinctOpco keyGenerate(output(BannerId as long),",
				"     startAt: 1L,",
				"     stepValue: 1L) ~> BannerIdKey",
				"BannerIdKey, Organization3nf lookup(OrganizationName == OrganizationName,",
				"     multiple: false,",
				"     pickup: 'any',",
				"     broadcast: 'auto')~> LookupOrganizationId",
				"CountrIdKey sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     store: 'synapse',",
				"     databaseType: 'spark',",
				"     format: 'table',",
				"     database: 'ADESG3NF',",
				"     tableName: 'Country',",
				"     input(",
				"          CountryId as integer,",
				"          IsoCountryName as string",
				"     ),",
				"     mapColumn(",
				"          CountryId,",
				"          IsoCountryName = Country",
				"     )) ~> CountryMapping",
				"OrganizationIdKey sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     store: 'synapse',",
				"     databaseType: 'spark',",
				"     format: 'table',",
				"     database: 'ADESG3NF',",
				"     tableName: 'Organization',",
				"     input(",
				"          OrganizationId as integer,",
				"          OrganizationName as string",
				"     ),",
				"     mapColumn(",
				"          OrganizationId,",
				"          OrganizationName = Company",
				"     )) ~> OrganizationMapping",
				"LookupOrganizationId sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     store: 'synapse',",
				"     databaseType: 'spark',",
				"     format: 'table',",
				"     database: 'ADESG3NF',",
				"     tableName: 'BannerId',",
				"     input(",
				"          BannerId as integer,",
				"          BannerName as string,",
				"          OrganizationId as integer",
				"     ),",
				"     mapColumn(",
				"          BannerId,",
				"          BannerName = OpCo,",
				"          OrganizationId",
				"     )) ~> BannerMapping"
			]
		}
	}
}