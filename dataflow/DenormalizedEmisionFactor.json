{
	"name": "DenormalizedEmisionFactor",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"name": "sourceEmissions"
				},
				{
					"name": "PurchasedGasData"
				}
			],
			"sinks": [
				{
					"name": "sinkEmissions"
				}
			],
			"transformations": [
				{
					"name": "lookupGas"
				}
			],
			"scriptLines": [
				"source(output(",
				"          EmissionFactorId as integer,",
				"          EmissionFactorName as string,",
				"          EmissionCategory as string,",
				"          EmissionScope as string,",
				"          EmissionFactorLocationBased as double,",
				"          EmissionFactorMarketBased as double,",
				"          UnitOfMeasure as string,",
				"          EmissionStartDate as date,",
				"          EmissionEndDate as date,",
				"          EgridRegion as string,",
				"          PurchasedGasId as integer,",
				"          EmissionCountry as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     store: 'synapse',",
				"     databaseType: 'spark',",
				"     format: 'table',",
				"     database: 'ESGNORMALIZEDMODEL',",
				"     tableName: 'EmissionFactors') ~> sourceEmissions",
				"source(output(",
				"          PurchasedGasId as integer,",
				"          PurchasedGasName as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     store: 'synapse',",
				"     databaseType: 'spark',",
				"     format: 'table',",
				"     database: 'ESGNORMALIZEDMODEL',",
				"     tableName: 'PurchasedGas') ~> PurchasedGasData",
				"sourceEmissions, PurchasedGasData lookup(sourceEmissions@PurchasedGasId == PurchasedGasData@PurchasedGasId,",
				"     multiple: false,",
				"     pickup: 'any',",
				"     broadcast: 'auto')~> lookupGas",
				"lookupGas sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     store: 'synapse',",
				"     databaseType: 'spark',",
				"     format: 'table',",
				"     database: 'ADESGPOC',",
				"     tableName: 'DimEmissionFactor',",
				"     recreate:true,",
				"     input(",
				"          EmissionFactorId as integer,",
				"          EmissionFactorName as string,",
				"          EmissionFactorLocationBased as double,",
				"          EmissionFactorMarketBased as double,",
				"          EmissionDate as date,",
				"          EmissionCountry as string,",
				"          EmissionFactorScope as string,",
				"          EmissionFactorUom as string,",
				"          EmissionFactorEgridRegion as string",
				"     ),",
				"     mapColumn(",
				"          EmissionFactorId,",
				"          EmissionFactorName = PurchasedGasName,",
				"          EmissionFactorLocationBased,",
				"          EmissionFactorMarketBased,",
				"          EmissionFactorUom = UnitOfMeasure,",
				"          EmissionDate = EmissionStartDate,",
				"          EmissionFactorEgridRegion = EgridRegion,",
				"          EmissionCountry,",
				"          EmissionFactorScope = EmissionScope",
				"     )) ~> sinkEmissions"
			]
		}
	}
}