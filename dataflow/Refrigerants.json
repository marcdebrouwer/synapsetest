{
	"name": "Refrigerants",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"name": "VirtualEmissionData"
				},
				{
					"linkedService": {
						"referenceName": "global-data-modeling-space-WorkspaceDefaultStorage",
						"type": "LinkedServiceReference"
					},
					"name": "RefrigerantData"
				},
				{
					"name": "FacilityData"
				},
				{
					"name": "PurchasedGas"
				},
				{
					"name": "BannerData"
				}
			],
			"sinks": [
				{
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "surrogateKey1"
				},
				{
					"name": "derivedColumn1"
				},
				{
					"name": "derivedColumn2"
				},
				{
					"name": "lookupPurchased"
				}
			],
			"scriptLines": [
				"source(output(",
				"          VirtualEmissionId as integer,",
				"          PurchasedGasId as integer,",
				"          VirtualEmissionStartDate as date,",
				"          VirtualEmissionEndDate as date,",
				"          VirtualEmissionScope as string,",
				"          BannerId as integer,",
				"          VirtualEmissionFactorLocation as double,",
				"          VirtualEmissionFactorMarket as double",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     store: 'synapse',",
				"     databaseType: 'spark',",
				"     format: 'table',",
				"     database: 'ESGNORMALIZEDMODEL',",
				"     tableName: 'VirtualEmissionFactor') ~> VirtualEmissionData",
				"source(output(",
				"          Location as string,",
				"          {Tag ID} as string,",
				"          {Rack Type} as string,",
				"          {Refrigerant Type} as string,",
				"          {Total Charge} as double '000,000,000.000',",
				"          {Primary Trade} as string,",
				"          Brand as string,",
				"          {Model No.} as string,",
				"          {Serial No.} as string,",
				"          {Facility Name} as string,",
				"          Deactivated as boolean,",
				"          {Rack Id} as string,",
				"          {Asset Type} as string,",
				"          Banner as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'delimited',",
				"     fileSystem: 'fsgdmsdevweeu01',",
				"     folderPath: 'ESG_MAPDATA',",
				"     fileName: 'Refrigerants.csv',",
				"     columnDelimiter: ';',",
				"     escapeChar: '\\\\',",
				"     quoteChar: '\\\"',",
				"     columnNamesAsHeader: true) ~> RefrigerantData",
				"source(output(",
				"          FacilityId as integer,",
				"          FacilityName as string,",
				"          LocationId as integer,",
				"          GrossFloorArea as integer,",
				"          AvailableSellingArea as integer,",
				"          FacilityTypeId as integer,",
				"          BannerId as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     store: 'synapse',",
				"     databaseType: 'spark',",
				"     format: 'table',",
				"     database: 'ESGNORMALIZEDMODEL',",
				"     tableName: 'Facility') ~> FacilityData",
				"source(output(",
				"          PurchasedGasId as integer,",
				"          PurchasedGasName as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     store: 'synapse',",
				"     databaseType: 'spark',",
				"     format: 'table',",
				"     database: 'ESGNORMALIZEDMODEL',",
				"     tableName: 'PurchasedGas') ~> PurchasedGas",
				"source(output(",
				"          BannerId as integer,",
				"          BannerName as string,",
				"          OrganizationId as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     store: 'synapse',",
				"     databaseType: 'spark',",
				"     format: 'table',",
				"     database: 'ESGNORMALIZEDMODEL',",
				"     tableName: 'Banner') ~> BannerData",
				"derivedColumn2 keyGenerate(output(RefrigerantId as long),",
				"     startAt: 1L,",
				"     stepValue: 1L) ~> surrogateKey1",
				"RefrigerantData derive(Location = replace(Location,'GF','')) ~> derivedColumn1",
				"derivedColumn1 derive(Location = replace(Location,\"SS\",'')) ~> derivedColumn2",
				"surrogateKey1, PurchasedGas lookup({Refrigerant Type} == PurchasedGasName,",
				"     multiple: false,",
				"     pickup: 'first',",
				"     asc(PurchasedGasId, true),",
				"     broadcast: 'auto')~> lookupPurchased",
				"lookupPurchased sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     store: 'synapse',",
				"     databaseType: 'spark',",
				"     format: 'table',",
				"     database: 'ESGNORMALIZEDMODEL',",
				"     tableName: 'DirectEmissionsFromRefrigeration',",
				"     input(",
				"          RefrigerantId as integer,",
				"          PeriodStartTimestamp as date,",
				"          PeriodEndTimestamp as date,",
				"          FuelMassVolumeUnitsLb as double,",
				"          C02EmissionsUnits as double,",
				"          PurchasedEnergyId as integer,",
				"          EmissionFactorId as integer,",
				"          FacilityId as integer,",
				"          FuelMassKg as double,",
				"          VirtualEmissionFactorId as integer",
				"     ),",
				"     mapColumn(",
				"          RefrigerantId,",
				"          FuelMassVolumeUnitsLb = {Total Charge}",
				"     )) ~> sink1"
			]
		}
	}
}